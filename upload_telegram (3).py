import os
import telebot
from telebot import types
from dotenv import load_dotenv
from currency_converter import CurrencyConverter

amount_of_currency = 0
currency = CurrencyConverter()
tg_token = os.environ["TG_TOKEN"]
bot = telebot.TeleBot(tg_token)


@bot.message_handler(commands=["start"])
def start_message(message):
    bot.send_message(
        message.chat.id,
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {0.first_name}! –Ø —á–∞—Ç-–±–æ—Çü§ñ. –° –º–æ–µ–π –ø–æ–º–æ—â—å—é –≤—ã –º–æ–∂–µ—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—ã. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å: "
        .format(message.from_user))
    bot.register_next_step_handler(message, entering_the_amount)


def entering_the_amount(message):
    global amount_of_currency
    try:
        amount_of_currency = float(message.text.strip())
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É")
        bot.register_next_step_handler(message, entering_the_amount)
        return

    if amount_of_currency > 0:
        markup = types.InlineKeyboardMarkup(row_width=2)
        button1 = types.InlineKeyboardButton("USD/EUR",
                                             callback_data="USD/EUR")
        button2 = types.InlineKeyboardButton("RUB/USD",
                                             callback_data="RUB/USD")
        button3 = types.InlineKeyboardButton("USD/JPY",
                                             callback_data="JPY/USD")
        button4 = types.InlineKeyboardButton("GBP/USD",
                                             callback_data="GBP/USD")
        button5 = types.InlineKeyboardButton("–î—Ä—É–≥–∞—è –ø–∞—Ä–∞",
                                             callback_data="else")
        markup.add(button1, button2, button3, button4, button5)
        bot.send_message(message.chat.id,
                         "<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç</b>üíµ: ",
                         parse_mode="HTML",
                         reply_markup=markup)
    else:
        bot.send_message(message.chat.id,
                         "–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É")
        bot.register_next_step_handler(message, entering_the_amount)


@bot.callback_query_handler(func=lambda _: True)
def callback_data(call):
    if call.data != "else":
        values = call.data.split("/")
        converted_value = currency.convert(amount_of_currency, values[0],
                                           values[1])
        bot.send_message(
            call.message.chat.id,
            f"–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: <u>{round(converted_value, 2)}</u>. –ú–æ–∂–µ—Ç–µ –∑–∞–Ω–æ–≤–æ –≤–ø–∏—Å–∞—Ç—å —Å—É–º–º—É",
            parse_mode="HTML")
        bot.register_next_step_handler(call.message, entering_the_amount)
    else:
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç —á–µ—Ä–µ–∑: /")
        bot.register_next_step_handler(call.message, entering_my_currencies)


def entering_my_currencies(message):
    try:
        values = message.text.upper().split("/")
        converted_value = currency.convert(amount_of_currency, values[0],
                                           values[1])
        bot.send_message(
            message.chat.id,
            f"–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: <u>{round(converted_value, 2)}</u>. –ú–æ–∂–µ—Ç–µ –∑–∞–Ω–æ–≤–æ –≤–ø–∏—Å–∞—Ç—å —Å—É–º–º—É",
            parse_mode="HTML")
        bot.register_next_step_handler(message, entering_the_amount)
    except Exception:
        bot.send_message(message.chat.id,
                         "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç –∑–∞–Ω–æ–≤–æ")
        bot.register_next_step_handler(message, entering_my_currencies)


def main():
    load_dotenv()
    bot.infinity_polling()


if __name__ == "__main__":
    main()
